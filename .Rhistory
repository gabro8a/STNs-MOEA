#########################################################################
# Search Trajectory Networks for Multi-Objective Evolutionary Algorithms
# Gabriela Ochoa and Yuri Lavinas, May 2021
# STN construction
# Input:  Text file trace of runs
# Output: STN graph objects
#########################################################################
rm(list = ls(all = TRUE))
library(igraph)
library(ggplot2)
library('RColorBrewer')
output_path = "./"
colour.col <-
c("#fdbf6f", "#4daf4a", "#6a3d9a", "#fb9a99", "#1f78b4")
metrics = read.csv(paste0(output_path, "metrics/UF_metrics.csv"))
metrics
library(dplyr)
fn = paste0("UF", i)
i =1
fn = paste0("UF", i)
fn
metrics %>% filter(instance == fn) %>% select(nodes)
metrics %>% filter(instance == fn) %>% select(starts_with('v'))
moead_v_metrics <- metrics %>% filter(instance == fn, algorithm == 'moead') %>% select(starts_with('v'))
moead_v_metrics
nsga2_v_metrics <- metrics %>% filter(instance == fn, algorithm == 'nsga2') %>% select(starts_with('v'))
ggplot(data = nsga2_v_metrics, aes(x = vector, y = vn, fill = vector)) +
geom_bar(stat = "identity") + theme_minimal() + ylim(0, 350) + xlab("Vectors") +
ylab("Number of Nodes") +
scale_fill_manual("legend", values = colour.col) + theme(
legend.position = "none",
axis.text = element_text(size = 30),
axis.title =
element_text(size = 32, face = "bold")
)
nsga2_v_metrics
nsga2_v_metrics$vector <- paste0("V", 1:5)
nsga2_v_metrics
nsga2_v_metrics$vector <- paste0("V", 1:5)
metrics
moead_edges <- metrics %>% filter(instance == fn, algorithm == 'moead') %>% select(starts_with('v')) %>% select('edges'
)
metrics %>% filter(instance == fn, algorithm == 'moead') %>% select(starts_with('v','edges'))
moead_edges <- metrics %>% filter(instance == fn, algorithm == 'moead') %>% select('edges')
moead_nodes <- metrics %>% filter(instance == fn) %>% select(starts_with('v'))
moead_nodes
edges <- metrics %>% filter(instance == fn) %>% select('edges')
edges
nodes
nodes <- metrics %>% filter(instance == fn) %>% select(starts_with('v'))
nodes
t(edges)
rownames(nodes) = c('MOEA/D', "NSGA-II")
nodes
t(nodes)
nodes = t(nodes)
nodes$vector = paste0("V",1:5)
nodes
nodes <- metrics %>% filter(instance == fn) %>% select(starts_with('v'))
rownames(nodes) = c('MOEA/D', "NSGA-II")
nodes = t(nodes)
nodes
nodes = as.data.frame(t(nodes))
nodes
nodes <- metrics %>% filter(instance == fn) %>% select(starts_with('v'))
rownames(nodes) = c('MOEA/D', "NSGA-II")
nodes
plot(nodes[1,])
nodes[1,]
plot(t(nodes[1,]))
nodes
moead_nodes = data.frame(vector = paste0("V",1:5), y = nodes[1,])
moead_nodes
paste0("V",1:5)
nodes[1,]
data.frame(vector = paste0("V",1:5), y = nodes[1,])
nodes <- metrics %>% filter(instance == fn) %>% select(starts_with('v'))
data.frame(vector = paste0("V",1:5), y = nodes[1,])
moead_nodes = data.frame(vector = paste0("V",1:5), y = nodes[1,])
moead_nodes
#########################################################################
# Search Trajectory Networks for Multi-Objective Evolutionary Algorithms
# Gabriela Ochoa and Yuri Lavinas, May 2021
# STN construction
# Input:  Text file trace of runs
# Output: STN graph objects
#########################################################################
rm(list = ls(all = TRUE))
library(igraph)
library(ggplot2)
library(dplyr)
library('RColorBrewer')
output_path = "./"
colour.col <-
c("#fdbf6f", "#4daf4a", "#6a3d9a", "#fb9a99", "#1f78b4")
metrics = read.csv(paste0(output_path, "metrics/UF_metrics.csv"))
fn = paste0("UF", 1)
nodes <- metrics %>% filter(instance == fn) %>% select(starts_with('v'))
nodes
moead_nodes = data.frame(vector = paste0("V",1:5), y = nodes[1,])
moead_nodes = data.frame(vector = paste0("V",1:5), y = nodes[1,])
moead_nodes
moead_nodes = data.frame(vector = paste0("V",1:5), y = t(nodes[1,]))
moead_nodes
colnames(nodes) = c('vector', "y")
nodes
nodes <- metrics %>% filter(instance == fn) %>% select(starts_with('v'))
moead_nodes = data.frame(vector = paste0("V",1:5), y = t(nodes[1,]))
colnames(moead_nodes) = c('vector', "y")
moead_nodes
ggplot(data = nodes, aes(x = vector, y = vn, fill = vector)) +
geom_bar(stat = "identity") + theme_minimal() + ylim(0, 350) + xlab("Vectors") +
ylab("Number of Nodes") +
scale_fill_manual("legend", values = colour.col) + theme(
legend.position = "none",
axis.text = element_text(size = 30),
axis.title =
element_text(size = 32, face = "bold")
)
ggplot(data = nodes, aes(x = vector, y = y, fill = vector)) +
geom_bar(stat = "identity") + theme_minimal() + ylim(0, 350) + xlab("Vectors") +
ylab("Number of Nodes") +
scale_fill_manual("legend", values = colour.col) + theme(
legend.position = "none",
axis.text = element_text(size = 30),
axis.title =
element_text(size = 32, face = "bold")
)
moead_nodes
ggplot(data = moead_nodes, aes(x = vector, y = y, fill = vector)) +
geom_bar(stat = "identity") + theme_minimal() + ylim(0, 350) + xlab("Vectors") +
ylab("Number of Nodes") +
scale_fill_manual("legend", values = colour.col) + theme(
legend.position = "none",
axis.text = element_text(size = 30),
axis.title =
element_text(size = 32, face = "bold")
)
source("~/Documents/estudos/STNs-MOEA/bar_metrics.R")
output_path
source("~/Documents/estudos/STNs-MOEA/bar_metrics.R")
source("~/Documents/estudos/STNs-MOEA/bar_metrics.R")
source("~/Documents/estudos/STNs-MOEA/bar_metrics.R")
